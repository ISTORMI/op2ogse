-- -*- mode: lua; coding: windows-1251-dos -*-
-- Напоминания о невыполненных заданиях на территории

local trader_names = {
  [ "Escape_Trader" ] = game.translate_string( "escape_trader_name" ), 
  [ "marsh_remont"  ] = game.translate_string( "marsh_remont_name" ),
}


function attach( sm )
  sm:subscribe({ signal = "on_first_update", fun = this.on_spawn })
end


function on_spawn()
  load_storylines()
end


local storylines = {}
function load_storylines()
  for i = 0, sys_ini:line_count( "reminder.tasks" ) - 1 do
    -- получаем id задачи в task_id, номер подзадачи в o и стори ид персонажа
    -- в sid
    local result, id, sid = sys_ini:r_line( "reminder.tasks", i, "", "" )
    local task_id, o = string.match( id, "(.+)[_](%d+)$" )
    ASSERT(
      ( task_id and o and tonumber( o ) and sid and story_ids[ sid ] ),
      "[%s]: wrong format of reminder.tasks: %s task_id[%s] o[%s,%s] sid[%s,%s]",
      script_name(), tostring( id ), tostring( task_id ), tostring( o ),
      tostring( tonumber( o ) ), tostring( sid ), tostring( story_ids[ sid ] )
    )
    o = tonumber( o )
    if db.actor:get_task_state( task_id, o ) == task.in_progress then
      local obj_active = true
      if
        o > 1
        and db.actor:get_task_state( task_id, o - 1 ) == task.in_progress
      then
        obj_active = false
      end
      if obj_active then
        table.insert( storylines, { task_id, o, sid } )
      end
    end
  end
end


function remind()
  local storyline   = remind_storyline()
  local random_task = task_manager.get_random_task():remind()
  if not ( storyline or random_task ) then
    no_reminds()
  end
  xr_sound.get_safe_sound_object( "device\\pda\\pda_tip" )
    :play( db.actor, 0, sound_object.s2d )
end


-- сюжетные задания
function remind_storyline()
  local sms, sms_size = {}, 0
  for _, v in ipairs( storylines ) do
    local task_id, o, sid = unpack( v )
    if db.actor:get_task_state( task_id, o ) == task.in_progress then
      local obj = alife():story_object( story_ids[ sid ] )
      if
        obj
        and ( obj:clsid() == clsid.script_trader or obj:alive() )
        and game_graph():vertex( obj.m_game_vertex_id ):level_id() == alife():level_id()
      then
        -- формируем сообщение
        local t = CGameTask()
        t:load( task_id )
        if o > 0 or all_subtasks_done( task_id, t ) then
          local npc_name = get_npc_name( obj, sid )
          if o == 0 then o = t:get_objectives_cnt() - 1 end
          if not sms[ sid ] then 
            sms[ sid ] = { name = get_npc_name( obj, sid ), txt = {} }
          end
          table.insert(
            sms[ sid ].txt,
            string.format(
              "%%c[255,127,255,255]%s: %%c[default]%s",
              game.translate_string( t:get_title() ),
              game.translate_string( t:get_objective( o ):get_description() )
            )
          )
          sms_size = sms_size + 1
        end
      end
    end
  end

  -- Выдаем напоминания
  if sms_size > 0 then
    for k, v in pairs( sms ) do
      send_info(
        string.format(
          "%%c[255,0,255,255]%s\\n%%c[default]%s",
          v.name, table.concat( v.txt, "\\n" )
        )
      )
    end
  end
  return sms_size > 0
end


-- все ли подзадания выполнены?
function all_subtasks_done( task_id, t )
  for i = 1, t:get_objectives_cnt() - 2 do
    if db.actor:get_task_state( task_id, i ) ~= task.completed then
      return false
    end
  end
  return true
end


-- имя квестовика
function get_npc_name( obj, sid )
  if obj:clsid() == clsid.script_trader then
    return trader_names[ sid ]
  else
    local trader = obj:get_trader()
    ASSERT(
      trader, "[%s]: %s: get_trader() == nil", script_name(), obj:name()
    )
    return trader.character_name
  end
end


-- нечего напоминать
function no_reminds()
  send_info(
    game.translate_string( "tips_no_reminds" )
  )
end


-- выдача информации
function send_info( info_text )
  -- подбираем иконку
  local x, y = 498, 47
  local pos  = string.find( info_text, "[default]", 1, true )
  if pos then
    x, y = news_manager.get_sender_icon(
      string.sub( info_text, 1, pos - 5 ) ..":"
    )
  end
  db.actor:give_game_news(
    info_text, "ui\\ui_iconsTotal", Frect():set( x, y, 83, 47 ), 0, 5000
  )
end
