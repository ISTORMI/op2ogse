-- -*- mode: lua; coding: windows-1251-dos -*-

function attach(sm)
  sm:subscribe({ signal = "on_key_down", fun = this.on_key_down })
  sm:subscribe({ signal = "on_mm_return_game", fun = this.on_mm_return_game })
  sm:subscribe({ signal = "on_spawn",    fun = this.on_spawn    })
end


function on_spawn()
  rebind_keys()
end


local dik_use_reminds, dik_use_runner

function rebind_keys()
  dik_use_reminds, dik_use_runner = {}, {}
  local data = dsh_cfg.get_data()
  if data.scores then
    for _, kn in ipairs( parse_names( data.scores ) ) do
      local dik = keyname_to_dik( kn )
      ASSERT( dik, "keyname to dik not found: %s", kn )
      dik_use_reminds[ dik ] = true
    end
    cmd2( "unbind", "scores" )
    cmd2( "unbind_sec", "scores" )
  end
  if data.cam_4 then
    for _, kn in ipairs( parse_names( data.cam_4 ) ) do
      local dik = keyname_to_dik( kn )
      ASSERT( dik, "keyname to dik not found: %s", kn )
      dik_use_runner[ dik ] = true
    end
    cmd2( "unbind", "cam_4" )
    cmd2( "unbind_sec", "cam_4" )
  end
end


function on_mm_return_game()
  rebind_keys()
end


function remind_user_spots()
  local t = {}
  level.map_iterate_user_spots_text(
    function( hint )
      if hint:sub( 1, 1 ) == "!" or hint:sub( -1 ) == "!" then
        local txt = string.gsub( hint, "^!%s*", "", 1 )
        table.insert( t, txt )
      end
    end
  )
  if table.getn( t ) > 0 then
    local task_texture, task_rect = get_texture_info(
      "ui_iconsTotal_abstract5"
    )
    for _, txt in ipairs( t ) do
      db.actor:give_game_news( txt, task_texture, task_rect, 0, 5000 )
    end
  end
end


function on_key_down( key, bind )
  if dik_use_reminds[ key ] then
    dsh.exec_on_update(
      function()
        remind_user_spots()
        reminder.remind()
        treasure_manager.get_treasure_manager():remind()
      end
    )
    return true
  end
end
