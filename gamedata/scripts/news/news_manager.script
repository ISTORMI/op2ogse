-- -*- mode: lua; coding: windows-1251-dos -*-

local actor_names = {
  -- перед esc_find_doctor_done
  {
    [ "СТРЕЛОК:" ] = "МЕЧЕНЫЙ:",
    [ "{ACTOR}"  ] = game.translate_string( "actor_name1u" ),
    [ "Стрелок:" ] = "Меченый:",
    [ "{Actor}"  ] = game.translate_string( "actor_name1c" ),
  },
  -- после
  {
    [ "МЕЧЕНЫЙ:" ] = "СТРЕЛОК:",
    [ "{ACTOR}"  ] = game.translate_string( "actor_name2u" ),
    [ "Меченый:" ] = "Стрелок:",
    [ "{Actor}"  ] = game.translate_string( "actor_name2c" ),
  },
}

local snds = {
	tips_esc_trader_about_anomalies	= [[characters_voice\scenario\trader\trader_tutorial_anomalies_1]],
	gar_dolg_warning				= [[characters_voice\scenario\duty\duty_warning1]],
	esc_return_dv					= [[characters_voice\scenario\trader\return_from_dv]],
	escape_fox_quest				= [[characters_voice\scenario\trader\trader_pda_fox]],
	tip_petruha_report				= [[characters_voice\scenario\escape\petruha_raport_p]],


	tips_agr_krot_sos				= [[characters_voice\scenario\agroprom\krot_help_pda_1]],
	tips_agr_krot_sos1				= [[characters_voice\scenario\agroprom\krot_help_pda_2]],
	tips_agr_krot_sos2				= [[characters_voice\scenario\agroprom\krot_help_pda_2]],
    tips_agr_stalker_help_2			= [[characters_voice\scenario\agroprom\stalker_help_2]],
    tips_agr_stalker_help_1			= [[characters_voice\scenario\agroprom\stalker_help_1]],
	-- ghost_tips						= [[characters_voice\scenario\agroprom\strelok_pda]],
	tips_agr_trader_documents		= [[characters_voice\scenario\agroprom\trader_pda_1]],
    pass_to_1st_door                = [[characters_voice\scenario\val\door1_password]],
    pass_to_2nd_door                = [[characters_voice\scenario\val\door2_password]],


	bar_ecolog_crush_heli_down		= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_1]],
	bar_freedom_attack_attract_actor= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_2]],
	bar_freedom_spam_1				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_6]],
	bar_freedom_spam_2				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_4]],
	bar_freedom_spam_3				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_3]],
	bar_freedom_spam_4				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_5]],
	bar_freedom_attack				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_7]],
	bar_freedom_attack_spy			= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_8]],
	bar_ecolog_crush_start_heli		= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_1]],
	bar_ecolog_crush_attract_actor  = [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_2]],
	bar_ecolog_spam_1				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_3]],
	bar_ecolog_spam_2				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_4]],
	bar_ecolog_spam_3				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_5]],
	bar_ecolog_spam_4				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_6]],
	bar_ecolog_attack				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_7]],
    rostok_kruglov_spam_1			= [[characters_voice\scenario\Rostok\kruglov_pda_help_1]],
    rostok_kruglov_spam_2			= [[characters_voice\scenario\Rostok\kruglov_pda_help_3]],
	bar_ecolog_escape				= [[characters_voice\scenario\Rostok\volkodav_pda_kruglov_escape_1]],
    storyline_vasilyev_tip			= [[characters_voice\scenario\yantar\vasiliev_pda]],
    storyline_ghost_tip 			= [[characters_voice\scenario\yantar\ghost_pda]],
    yan_saharov_message 			= [[characters_voice\scenario\yantar\professor_to_actor_pda_3]],
	yan_saharov_message_2 			= [[characters_voice\scenario\yantar\professor_to_actor_pda_4]],
    yan_saharov_message_3 			= [[characters_voice\scenario\yantar\professor_to_actor_pda_5]],
	
	yan_scientist_probe				= [[characters_voice\scenario\yantar\kruglov_radiation_quest_13]],
	yan_scientist_probe_1			= [[characters_voice\scenario\yantar\kruglov_radiation_quest_11]],
	yan_scientist_probe_2			= [[characters_voice\scenario\yantar\kruglov_radiation_quest_12]],
	yan_scientist_probe_3			= [[characters_voice\scenario\yantar\kruglov_radiation_quest_6]],
	
	rostok_kruglov_follow			= [[characters_voice\scenario\Rostok\pda_kruglov_help_6]],
	bar_freedom_chase			= [[characters_voice\scenario\Rostok\pda_kruglov_stop_enemy_1]],
	rostok_kruglov_follow_2			= [[characters_voice\scenario\Rostok\pda_kruglov_stop_enemy_2]],
	rostok_kruglov_follow_3			= [[characters_voice\scenario\Rostok\pda_kruglov_help_5]],
		
	bar_territory_dolg_1_hit		= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_1]],
	bar_territory_dolg_2_hit		= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_2]],
	bar_territory_dolg_3_hit		= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_3]],
	bar_territory_dolg_kill			= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_4]],
	
	tips_bun_komand                 = [[characters_voice\scenario\bun\patrol_prikaz]],

	general_ecolog_tip_1            = [[characters_voice\scenario\yantar\professor_to_actor_pda_1]],
    general_ecolog_tip_2            = [[characters_voice\scenario\yantar\professor_to_actor_pda_2]],


    tips_gar_hellcar_alarm			= [[characters_voice\scenario\garbage\neutrals_commander_pda_1]],
	gar_dolg_blokpost_warning		= [[characters_voice\scenario\duty\duty_warning1]],
	gar_dolg_monster_rush			= [[characters_voice\scenario\duty\duty_request1]],
	gar_direction_fire				= [[characters_voice\scenario\garbage\junkyard_combat_ambush]],
	gar_hellcar_victory				= [[characters_voice\scenario\garbage\junkyard_combat_end]],
	gar_actor_looser				= [[characters_voice\scenario\garbage\duty_after_rush_bad]],
	gar_actor_normal				= [[characters_voice\scenario\garbage\duty_after_rush_normal]],
	gar_actor_winner				= [[characters_voice\scenario\garbage\duty_after_rush_good]],


	esc_direction_fire				= [[characters_voice\scenario\escape\lager_fanat_attack]],
	esc_fanat_victory				= [[characters_voice\scenario\escape\lager_fanat_victory]],
	
	rad_barman_spam					= [[characters_voice\scenario\radar\rad_barman_message]],


	val_monolith_trader_pda1		= [[characters_voice\scenario\val\trader_dialog1]],
	o_soznanie_text					= [[characters_voice\scenario\sarcofag\o_soznanie_call]],


-- dublicate pda sounds for remark scheme
    val_rob_leader_jeer_1           = [[characters_voice\scenario\val\rob_leader_jeer_1_p]],
--    val_rob_leader_call             = [[characters_voice\scenario\val\rob_call_1_p]],

    pri_followers_leader_phrase1_1  = [[characters_voice\scenario\pri\followers_leader_phrase1_1_p]],
    pri_followers_leader_phrase1_2  = [[characters_voice\scenario\pri\followers_leader_phrase1_2_p]],
    pri_followers_leader_phrase1_3  = [[characters_voice\scenario\pri\followers_leader_phrase1_3_p]],
}


function attach( sm )
  sm:subscribe({ signal = "on_task", fun = this.on_task })
end


local changed_tasks = {}
local changed_tasks_t
skip_send_task = false

function on_task( _task, _objective, _state )
  if skip_send_task then return end
  table.insert( changed_tasks, { _task, _objective, _state } )
  if not changed_tasks_t then
    changed_tasks_t = dsh.exec_on_update(
      function() process_changed_tasks() end
    )
  end
end


function process_changed_tasks()
  changed_tasks_t = nil
  for _, t in ipairs( changed_tasks ) do
    process_task_change( unpack( t ) )
  end
  changed_tasks = {}
end


function process_task_change( _task, _objective, _state )
  if _objective:get_idx() == 0 then
    if _state == task.fail then
      db.actor:give_info_portion( "acv_task_fail" )
      send_task( db.actor, "fail", _task, _objective )
    elseif _state == task.completed then
      task_manager.reward_by_task( _task )
      send_task( db.actor, "complete", _task, _objective )
    else
      send_task( db.actor, "new", _task, _objective )
    end
  else
    if _task:get_objective( 0 ):get_state() == task.in_progress then
      send_task( db.actor, "update", _task, _objective )
    end
  end
end


local news = {}
local function get_snd(t, k)
	-- log3("getting sound: %s", tostring(k))
	if snds[k] ~= nil then
		return xr_sound.get_safe_sound_object(snds[k])
	else
		return nil
	end
end
local function set_snd(t, k, v)
	--log1("error! we don't do this!")
end
local mt = {}
mt.__index = get_snd
mt.__newindex = set_snd
setmetatable(news, mt)

local pda_news = xr_sound.get_safe_sound_object([[device\pda\pda_news]])
local pda_tips = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
local pda_task = xr_sound.get_safe_sound_object([[device\pda\pda_objective]])

-- При добавлении новых квестовиков добавлять для них иконки в ui_iconstotal и прописывать сюда полное имя, как оно идет в смс. Или прописывать sender в вызов send_tip. Сортировать по алфавиту.
local tips_icons = {
	aaz 		= {249,1128, game.translate_string( "name_aaz" ), game.translate_string( "name_aaz_small" )},
	adrenalin 	= {0,1880, game.translate_string( "name_adrenalin" ), game.translate_string( "name_adrenalin_small" )},
	akill		= {332,1128, game.translate_string( "name_akill" ), game.translate_string( "name_akill_small" )},
	akim 		= {166,1081, game.translate_string( "name_akim" ), game.translate_string( "name_akim_small" )},
	alexandrych = {166,1739, game.translate_string( "name_aleksandrich" ), game.translate_string( "name_aleksandrich_small" )},
	alfa2012	= {498,1316, game.translate_string( "name_alfa2012" ), game.translate_string( "name_alfa2012_small" )},
	alp			= {332,1175, game.translate_string( "name_alpinist" ), game.translate_string( "name_alpinist_small" )},
	anna		= {0,1269, game.translate_string( "name_anna" ), game.translate_string( "name_anna_small" )},
	andersen	= {498,1363, game.translate_string( "name_andersen" ), game.translate_string( "name_andersen_small" )},
	ara 		= {415,423, game.translate_string( "name_ara" ), game.translate_string( "name_ara_small" )},
	arena    	= {332,141, game.translate_string( "name_arni" ), game.translate_string( "name_arni_small" )},
	arhara 		= {83,1081, game.translate_string( "name_arhara" ), game.translate_string( "name_arhara_small" )},
	ariadna 	= {166,1692, game.translate_string( "name_ariadna" ), game.translate_string( "name_ariadna_small" )},
	barman   	= {332,235, game.translate_string( "name_barmen" ), game.translate_string( "name_barmen_small" )},
	baty 		= {249,1316, game.translate_string( "name_batya" ), game.translate_string( "name_batya_small" )},
	bes 		= {415,0, game.translate_string( "name_bes" ), game.translate_string( "name_bes_small" )},
	bibliofrend = {0,1175, game.translate_string( "name_praim" ), game.translate_string( "name_praim_small" )},
	bibliofrend_black = {0,1222},
	bland 		= {166,1598, game.translate_string( "name_blend" ), game.translate_string( "name_blend_small" )},
	blondy 		= {166,1833, game.translate_string( "name_blondinka" ), game.translate_string( "name_blondinka_small" )},
	bocman 		= {83,1598, game.translate_string( "name_botsman" ), game.translate_string( "name_botsman_small" )},
	borman 		= {498,1175, game.translate_string( "name_borman" ), game.translate_string( "name_borman_small" )},
	boroda 		= {0,1598, game.translate_string( "name_boroda" ), game.translate_string( "name_boroda_small" )},
	borov 		= {332,564, game.translate_string( "name_borov" ), game.translate_string( "name_borov_small" )},
	brodaga 	= {0,1504, game.translate_string( "name_brodyaga" ), game.translate_string( "name_brodyaga_small" )},
	bubulyka 	= {0,1316, game.translate_string( "name_stalker_bubulyuka" ), game.translate_string( "name_stalker_bubulyuka_small" )},
	buusty		= {83,1410, game.translate_string( "name_basti" ), game.translate_string( "name_basti_small" )},
	chernomor 	= {166,1316, game.translate_string( "name_chernomor" ), game.translate_string( "name_chernomor_small" )},
	coll	 	= {664,423, game.translate_string( "name_kollektsioner" ), game.translate_string( "name_kollektsioner_small" )},
	dan 		= {166,987, game.translate_string( "name_den" ), game.translate_string( "name_den_small" )},
	dasha 		= {166,1880, game.translate_string( "name_dasha" ), game.translate_string( "name_dasha_small" )},
	death    	= {0,752},
	default  	= {0,658}, -- по умолчанию
	dezertir	= {332,0, game.translate_string( "name_dezertir" ), game.translate_string( "name_dezertir_small" )},
	diak 		= {498,1457, game.translate_string( "name_dyak" ), game.translate_string( "name_dyak_small" )},
	dimak 		= {249,1081, game.translate_string( "name_dimak" ), game.translate_string( "name_dimak_small" )},
	dmitriev 	= {498,0, game.translate_string( "name_professor_dmitriev" ), game.translate_string( "name_professor_dmitriev_small" )},
	docent 		= {415,1739, game.translate_string( "name_dotsent" ), game.translate_string( "name_dotsent_small" )},
	doctor 		= {415,846, game.translate_string( "name_doktor" ), game.translate_string( "name_doktor_small" )},
	dolgovazyi	= {415,1786, game.translate_string( "name_bardolgovyazii" ), game.translate_string( "name_bardolgovyazii_small" )},
	doctor_black = {83,1551, game.translate_string( "name_chyornii_doktor" ), game.translate_string( "name_chyornii_doktor_small" )},
	dolg     	= {498,141, game.translate_string( "name_barduty" ), game.translate_string( "name_barduty_small" )},
	dragunof	= {249,1833, game.translate_string( "name_dragunov" ), game.translate_string( "name_dragunov_small" )},
	duda 		= {166,1551, game.translate_string( "name_duda" ), game.translate_string( "name_duda_small" )},
	ecolog   	= {498,0},
	elsa 		= {0,1739, game.translate_string( "name_elza" ), game.translate_string( "name_elza_small" )},
	err 		= {913,799}, -- error
	fanat		= {332,1551, game.translate_string( "name_fanat" ), game.translate_string( "name_fanat_small" )},
	father_pantera = {83,1833, game.translate_string( "name_otets_panteri" ), game.translate_string( "name_otets_panteri_small" )},
	fenix 		= {498,1645, game.translate_string( "name_feniks" ), game.translate_string( "name_feniks_small" )},
	fenrir 		= {0,1034, game.translate_string( "name_fenrir" ), game.translate_string( "name_fenrir_small" )},
	filatov		= {498,1692, game.translate_string( "name_kapitan_filatov" ), game.translate_string( "name_kapitan_filatov_small" )},
	freedom  	= {498,94, game.translate_string( "name_svoboda" ), game.translate_string( "name_svoboda_small" )},
	freeman  	= {498,1034, game.translate_string( "name_frimen" ), game.translate_string( "name_frimen_small" )},
	fric 		= {83,1504, game.translate_string( "name_frits" ), game.translate_string( "name_frits_small" )},
	gavr		= {332,1739, game.translate_string( "name_gavr" ), game.translate_string( "name_gavr_small" )},
	gen_info 	= {0,658}, -- общая инфа
	gila		= {332,1786, game.translate_string( "name_zhila" ), game.translate_string( "name_zhila_small" )},
	ginekolog 	= {0,1927, game.translate_string( "name_shura_ginekolog" ), game.translate_string( "name_shura_ginekolog_small" )},
	gologramma 	= {498,1269, game.translate_string( "name_gologramma" ), game.translate_string( "name_gologramma_small" )},
	grach		= {332,1081, game.translate_string( "name_grach" ), game.translate_string( "name_grach_small" )},
	haliava		= {332,1269, game.translate_string( "name_halyava" ), game.translate_string( "name_halyava_small" )},
	himera 		= {83,1927, game.translate_string( "name_himera" ), game.translate_string( "name_himera_small" )},
	himik 		= {249,1222, game.translate_string( "name_himik" ), game.translate_string( "name_himik_small" )},
	holod 		= {83,1974, game.translate_string( "name_holodov" ), game.translate_string( "name_holodov_small" )},
	iskra 		= {166,1128, game.translate_string( "name_iskra" ), game.translate_string( "name_iskra_small" )},
	ivancov		= {332,329, game.translate_string( "name_ivantsov" ), game.translate_string( "name_ivantsov_small" )},
	kalinin		= {498,1410, game.translate_string( "name_kalinin" ), game.translate_string( "name_kalinin_small" )},
	kalmyk		= {249,1927, game.translate_string( "name_kalmik" ), game.translate_string( "name_kalmik_small" )},
	kartograf  	= {913,235, game.translate_string( "name_kartograf" ), game.translate_string( "name_kartograf_small" )},
	kep		  	= {415,1974, game.translate_string( "name_kep" ), game.translate_string( "name_kep_small" )},
	kidalo		= {249,1833, game.translate_string( "name_sanyok_razboinik" ), game.translate_string( "name_sanyok_razboinik_small" )},
	killer   	= {913,940, game.translate_string( "name_nayomniki" ), game.translate_string( "name_nayomniki_small" )},
	klenov 		= {83,1316, game.translate_string( "name_klyonov" ), game.translate_string( "name_klyonov_small" )},
	klyk 		= {83,1034, game.translate_string( "name_klik" ), game.translate_string( "name_klik_small" )},
	kolmogor 	= {83,1269, game.translate_string( "name_kolmogor" ), game.translate_string( "name_kolmogor_small" )},
	korsar		= {332,1081, game.translate_string( "name_korsar" ), game.translate_string( "name_korsar_small" )},
	korshun		= {498,1739, game.translate_string( "name_korshun" ), game.translate_string( "name_korshun_small" )},
	kostya		= {332,1598, game.translate_string( "name_kostya" ), game.translate_string( "name_kostya_small" )},
	kostylnuga 	= {83,1175, game.translate_string( "name_kostilnoga" ), game.translate_string( "name_kostilnoga_small" )},
	kotobegemot = {0,987, game.translate_string( "name_kotobegemot" ), game.translate_string( "name_kotobegemot_small" )},
	kot			= {498,1081, game.translate_string( "name_kot" ), game.translate_string( "name_kot_small" )},
	krest		= {498,1504, game.translate_string( "name_krest" ), game.translate_string( "name_krest_small" )},
	krisyk		= {332,1692, game.translate_string( "name_krisyuk" ), game.translate_string( "name_krisyuk_small" )},
	kruglov		= {332,1363, game.translate_string( "name_kruglov" ), game.translate_string( "name_kruglov_small" )},
	kruger		= {249,1692, game.translate_string( "name_kruger" ), game.translate_string( "name_kruger_small" )},
	kulinar		= {332,1645, game.translate_string( "name_kulinar" ), game.translate_string( "name_kulinar_small" )},
	krot     	= {332,47, game.translate_string( "name_krot" ), game.translate_string( "name_krot_small" )},
	kuzmat 		= {166,1927, game.translate_string( "name_kuzkina_mat" ), game.translate_string( "name_kuzkina_mat_small" )},
	kuznecov 	= {332,752, game.translate_string( "name_kuznetsov" ), game.translate_string( "name_kuznetsov_small" )},
	lesnik 		= {166,1269, game.translate_string( "name_lesnik" ), game.translate_string( "name_lesnik_small" )},
	lis 		= {498,1222, game.translate_string( "name_lis" ), game.translate_string( "name_lis_small" )},
	lisiy 		= {415,141, game.translate_string( "name_lisii" ), game.translate_string( "name_lisii_small" )},
	lentay		= {249,1645, game.translate_string( "name_lentyai" ), game.translate_string( "name_lentyai_small" )},
	lobsang 	= {0,1410, game.translate_string( "name_lobsang" ), game.translate_string( "name_lobsang_small" )},
	loh 		= {332,611, game.translate_string( "name_sergei_lohmatii" ), game.translate_string( "name_sergei_lohmatii_small" )},
	lovkach 	= {664,517, game.translate_string( "name_lovkach" ), game.translate_string( "name_lovkach_small" )},
	luber		= {332,1316, game.translate_string( "name_lyuber" ), game.translate_string( "name_lyuber_small" )},
	lucash 		= {415,235, game.translate_string( "name_lukash" ), game.translate_string( "name_lukash_small" )},
	ludmila		= {0,1692, game.translate_string( "name_lyudmila" ), game.translate_string( "name_lyudmila_small" )},
	maks		= {332,1410, game.translate_string( "name_gymnasts" ), game.translate_string( "name_gymnasts_small" )},
	maksimilian = {166,1175, game.translate_string( "name_imilian" ), game.translate_string( "name_imilian_small" )},
	maria 		= {0,1551, game.translate_string( "name_mariya" ), game.translate_string( "name_mariya_small" )},
	masha 		= {166,1833, game.translate_string( "name_masha" ), game.translate_string( "name_masha_small" )},
	meceniy 	= {913,846, game.translate_string( "name_mechenii" ), game.translate_string( "name_mechenii_small" )},
	mercaushy 	= {249,1175, game.translate_string( "name_mertsayuschii" ), game.translate_string( "name_mertsayuschii_small" )},
	molniy 		= {249,1034, game.translate_string( "name_molniya" ), game.translate_string( "name_molniya_small" )},
	monolith 	= {913, 893, game.translate_string( "name_monolit" ), game.translate_string( "name_monolit_small" )},
	morozko 	= {249,1410, game.translate_string( "name_morozko" ), game.translate_string( "name_morozko_small" )},
	muha 		= {83,1739, game.translate_string( "name_muha" ), game.translate_string( "name_muha_small" )},
	nano 		= {913,752}, -- nano_suit
	nazar 		= {249,987, game.translate_string( "name_nazar" ), game.translate_string( "name_nazar_small" )},
	noi 		= {498,1598, game.translate_string( "name_noi" ), game.translate_string( "name_noi_small" )},
	norman 		= {166,1457, game.translate_string( "name_norman" ), game.translate_string( "name_norman_small" )},
    nodata   	= {249,940, game.translate_string( "name_istochnik_neizvesten" ), game.translate_string( "name_istochnik_neizvesten_small" )},
	o_soznanie 	= {415,893, game.translate_string( "name_o_soznanie" ), game.translate_string( "name_o_soznanie_small" )},
	obmorok 	= {166,1504, game.translate_string( "name_obmorok" ), game.translate_string( "name_obmorok_small" )},
	op2	 		= {332,987, game.translate_string( "name_komanda_sozdatelei_op_2" ), game.translate_string( "name_komanda_sozdatelei_op_2_small" )},
	osvedomitel	= {498,987, game.translate_string( "name_osvedomitel" ), game.translate_string( "name_osvedomitel_small" )},
	otshelnik 	= {0,1833, game.translate_string( "name_otshelnik" ), game.translate_string( "name_otshelnik_small" )},
	oz 			= {913,611, game.translate_string( "name_professor_ozerskii" ), game.translate_string( "name_professor_ozerskii_small" )},
	pantera 	= {83,1128, game.translate_string( "name_pantera" ), game.translate_string( "name_pantera_small" )},
	parfumer 	= {166,1410, game.translate_string( "name_parfyumer" ), game.translate_string( "name_parfyumer_small" )},
	peregar 	= {498,1551, game.translate_string( "name_peregar" ), game.translate_string( "name_peregar_small" )},
	petrenko 	= {332,376, game.translate_string( "name_petrenko" ), game.translate_string( "name_petrenko_small" )},
	petrov 		= {166,1457, game.translate_string( "name_stalker_petrov" ), game.translate_string( "name_stalker_petrov_small" )},
	petrovich 	= {249,1269, game.translate_string( "name_pesovich" ), game.translate_string( "name_pesovich_small" )},
	petruha 	= {332,799, game.translate_string( "name_petruha" ), game.translate_string( "name_petruha_small" )},
	piligrim 	= {0,1974, game.translate_string( "name_piligrim" ), game.translate_string( "name_piligrim_small" )},
	plichko		= {332,282, game.translate_string( "name_plichko" ), game.translate_string( "name_plichko_small" )},
	potap		= {249,1880, game.translate_string( "name_potap" ), game.translate_string( "name_potap_small" )},
	povar		= {249,1739, game.translate_string( "name_povar" ), game.translate_string( "name_povar_small" )},
	prapor		= {332,1880, game.translate_string( "name_prapor" ), game.translate_string( "name_prapor_small" )},
	prigorshnya = {166,1786, game.translate_string( "name_prigorshnya" ), game.translate_string( "name_prigorshnya_small" )},
	prizrak  	= {415,705, game.translate_string( "name_prizrak" ), game.translate_string( "name_prizrak_small" )},
	proper70 	= {0,1457, game.translate_string( "name_proper_semidesyatii" ), game.translate_string( "name_proper_semidesyatii_small" )},
	provodnik	= {332,1504, game.translate_string( "name_provodnik" ), game.translate_string( "name_provodnik_small" )},
	pula		= {332,1457, game.translate_string( "name_pulya" ), game.translate_string( "name_pulya_small" )},
	pulemet		= {332,1081, game.translate_string( "name_pulemet" ), game.translate_string( "name_pulemet_small" )},
	questman_death = {664,470}, -- смерть квестовика/гг
	radist 		= {166,1222, game.translate_string( "name_radist" ), game.translate_string( "name_radist_small" )},
	resident_evil = {0,1128, game.translate_string( "name_obitel_zla" ), game.translate_string( "name_obitel_zla_small" )},
	remind		= {913,423, game.translate_string( "name_napominaniya" ), game.translate_string( "name_napominaniya_small" )},
	romale		= {166,1974, game.translate_string( "name_roma_romale" ), game.translate_string( "name_roma_romale_small" )},
	saharov  	= {332,470, game.translate_string( "name_saharov" ), game.translate_string( "name_saharov_small" )},
	sak			= {415,987, game.translate_string( "name_syak" ), game.translate_string( "name_syak_small" )},
	sapsan 		= {83,1692, game.translate_string( "name_sapsan" ), game.translate_string( "name_sapsan_small" )},
	sedoy 		= {83,1363, game.translate_string( "name_sedoi" ), game.translate_string( "name_sedoi_small" )},
	semenov		= {83,1363, game.translate_string( "name_semyonov" ), game.translate_string( "name_semyonov_small" )},
	semeckiy	= {332,1974, game.translate_string( "name_yurii_semetskii" ), game.translate_string( "name_yurii_semetskii_small" )},
	shadow_monolit = {83,1880, game.translate_string( "name_ten_monolita" ), game.translate_string( "name_ten_monolita_small" )},
	shadowman	= {249,1974, game.translate_string( "name_shedoumen" ), game.translate_string( "name_shedoumen_small" )},
	shahter 	= {166,1034, game.translate_string( "name_shahtyor" ), game.translate_string( "name_shahtyor_small" )},
	shnira		= {332,1692, game.translate_string( "name_shnira" ), game.translate_string( "name_shnira_small" )},
	shurup		= {332,1222, game.translate_string( "name_shurup" ), game.translate_string( "name_shurup_small" )},
	shax		= {249,1457, game.translate_string( "name_shahmatist" ), game.translate_string( "name_shahmatist_small" )},
	sherstuk	= {249,1551, game.translate_string( "name_sherstyuk" ), game.translate_string( "name_sherstyuk_small" )},
	shi3 		= {249,1363, game.translate_string( "name_shi3" ), game.translate_string( "name_shi3_small" )},
	sid 		= {249,611, game.translate_string( "name_sidorovich" ), game.translate_string( "name_sidorovich_small" )},
	skraga		= {249,1598, game.translate_string( "name_skryaga" ), game.translate_string( "name_skryaga_small" )},
	sledopyt	= {332,1034, game.translate_string( "name_sledopit" ), game.translate_string( "name_sledopit_small" )},
	snegir 		= {0,1645, game.translate_string( "name_slavik_snegir" ), game.translate_string( "name_slavik_snegir_small" )},
	solvador 	= {83,1645, game.translate_string( "name_solvador" ), game.translate_string( "name_solvador_small" )},
	stalker  	= {0,658},
	starik		= {415,1927, game.translate_string( "name_starik" ), game.translate_string( "name_starik_small" )},
	starogil	= {664,658, game.translate_string( "name_starii_zhil" ), game.translate_string( "name_starii_zhil_small" )},
	str 		= {913,705, game.translate_string( "name_strelok" ), game.translate_string( "name_strelok_small" )},
	suslov 		= {0,1363, game.translate_string( "name_suslov" ), game.translate_string( "name_suslov_small" )},
	sviblov 	= {166,1645, game.translate_string( "name_sviblov" ), game.translate_string( "name_sviblov_small" )},
	svyaz	 	= {747,94, game.translate_string( "name_operator_svyazi" ), game.translate_string( "name_operator_svyazi_small" )},
    tolik		= {249,1504, game.translate_string( "name_tolik" ), game.translate_string( "name_tolik_small" )},
	trade	 	= {0,0}, -- деньги
	trader   	= {332,893}, -- сидорович
	uniq  	 	= {498,47},
	unknown 	= {913,799, game.translate_string( "name_neizvestnii_stalker" ), game.translate_string( "name_neizvestnii_stalker_small" )},
	vesker 		= {0,1786, game.translate_string( "name_vesker" ), game.translate_string( "name_vesker_small" )},
	viking 		= {415,94, game.translate_string( "name_viking" ), game.translate_string( "name_viking_small" )},
	vitamin 	= {83,1786, game.translate_string( "name_vitamin" ), game.translate_string( "name_vitamin_small" )},
	vol 		= {913,517}, -- волазар первый
	vol_new 	= {913,564, game.translate_string( "name_volazar" ), game.translate_string( "name_volazar_small" )},
	volkov	 	= {249,1645, game.translate_string( "name_professor_vovochka" ), game.translate_string( "name_professor_vovochka_small" )},
	voronin 	= {332,423, game.translate_string( "name_general_voronin" ), game.translate_string( "name_general_voronin_small" )},
	voron 		= {498,1128, game.translate_string( "name_voron" ), game.translate_string( "name_voron_small" )},
	vasiliy		= {415,1034, game.translate_string( "name_vasilii" ), game.translate_string( "name_vasilii_small" )},
	vasya9		= {498,376, game.translate_string( "name_vasya_devyatii" ), game.translate_string( "name_vasya_devyatii_small" )},
    weaprep 	= {0,517}, -- апгрейд оружия
	wolf	 	= {332,940, game.translate_string( "name_volk" ), game.translate_string( "name_volk_small" )},
	wolffrend 	= {0,1081, game.translate_string( "name_vozhak" ), game.translate_string( "name_vozhak_small" )},
	yakut		= {332,1927, game.translate_string( "name_yakut" ), game.translate_string( "name_yakut_small" )},
	yurik		= {249,1786, game.translate_string( "name_yurik" ), game.translate_string( "name_yurik_small" )},
	zahar	 	= {415,1880, game.translate_string( "name_zahar" ), game.translate_string( "name_zahar_small" )},
	zashita 	= {664,141, game.translate_string( "name_sistema_zaschiti" ), game.translate_string( "name_sistema_zaschiti_small" )},
	zemlyak 	= {83,1457, game.translate_string( "name_zemlyak" ), game.translate_string( "name_zemlyak_small" )},
	ziklop 		= {83,987, game.translate_string( "name_tsiklop" ), game.translate_string( "name_tsiklop_small" )},
	zlobny 		= {166,1363, game.translate_string( "name_zlobnii" ), game.translate_string( "name_zlobnii_small" )},
}

-- Получение иконки отправителя
function get_sender_icon(text, sender)
	if sender == nil or not tips_icons[sender] then
		-- пробуем найти иконку по заголовку СМС
		sender = nil
		
		for k,v in pairs(tips_icons) do
			if (v[3] and string.find(text, v[3], 1, true)) or (v[4] and string.find(text, v[4], 1, true)) then
				sender = k
				break
			end
		end
		
		if sender == nil then
			-- не нашли
			sender = "default"
		end
	end
	
	return tips_icons[sender][1], tips_icons[sender][2]
end


ozvuchka_end = 0

function send_tip( actor, news_id, timeout, sender, showtime, sender_id, ozvuchka, clear_ozvuchka_end )
  if not news_id then return false end
  if not timeout then timeout = 0 end
  if not showtime then showtime = 5000 end
	
  local ozvuchka_snd
  if ozvuchka then
    -- играем озвучку
    xr_sound.stop_prev_sms_sound()
    ozvuchka_snd = xr_sound.get_safe_sound_object( ozvuchka )
    ozvuchka_snd:play( db.actor, timeout, sound_object.s2d )
		
    -- Необходимо поставить время показа по длине сцены
    local length = ozvuchka_snd:length()
    if length > showtime then
      showtime = length
    end
    if clear_ozvuchka_end then
      ozvuchka_end = 0
    else
      ozvuchka_end = time_global() + length * 1.1
    end
  else
    -- Играем дефолтный звук
    pda_tips:play_no_feedback(
      db.actor, sound_object.s2d, timeout, vector():set( 0, 0, 0 ), 1.0
    )
    local news_snd = news[ news_id ]
    if news_snd then
      -- Играем звук забитый
      news_snd:play( db.actor, timeout + 1, sound_object.s2d )
      -- Необходимо поставить время показа по длине сцены
      local length = news_snd:length()
      if length > showtime then
        showtime = length
      end
    end
  end
	
  local news_text = game.translate_string( news_id )

  -- Определяем, ГГ как отправитель по игре уже Cтрелок, или еще Меченый
  local names
  if db.actor:has_info( "esc_find_doctor_done" ) then
    names = actor_names[ 2 ]
  else
    names = actor_names[ 1 ]
  end
  for k, v in pairs( names ) do
    news_text = string.gsub( news_text, k, v, 1 )
  end

  local x, y = get_sender_icon( news_text, sender )
  actor:give_game_news(
    news_text, "ui\\ui_iconsTotal", Frect():set( x, y, 83, 47 ), timeout * 1000,
    showtime
  )

  return ozvuchka_snd or true
end


function send_tip_nosound(actor, news_id, timeout, sender)
	if news_id == nil then return end

	timeout = 0

	--' Играем дефолтный звук
	pda_tips:play(db.actor, timeout, sound_object.s2d)
	local news_sound = news[news_id]

	return news_sound
end

local action_descr_by_type = {
	new = "general_new_task",
	update = "general_update_task",
	complete = "general_complete_task",
	fail = "general_fail_task"
}

local cycle_task = {
	"eliminate_lager",
	"defend_lager",
	"kill_stalker",
	"artefact",
	"monster_part",
	"find_item"
}


local autosave_t

function send_task(actor, type, task, objective)
	-- u3_utils.printf("send_task function started with type: "..type..".")
	if db.actor == nil then return false end
	
	local task_title = task:get_title()
	local task_time = string.find(task_title, "\\n", 1, true)
	if task_time then
		task_title = string.sub(task_title, 1, task_time-1)
	end
	local skip_autosave = false -- пропуск циклических заданий
	local news_text, task_texture, task_rect
	local objective_index = objective:get_idx() + 1
	
	--' Играем дефолтный звук
	pda_task:play(db.actor, 0, sound_object.s2d)

	-- цвет сообщения
	local text_color = "%c[255,160,160,160]"
	if type == "fail" then
		text_color = "%c[255,255,0,0]"
	end
	
	-- циклическое ли задание?
	local cycle_task_type = nil
	for i,task_type in ipairs(cycle_task) do
		if task_title == game.translate_string(task_type) then
			cycle_task_type = i
			break
		end
	end
	
	if cycle_task_type then
		skip_autosave = true
		
		--' Циклическое задание - берем координаты из текстуры таска
		task_texture, task_rect = get_texture_info("ui_iconsTotal_"..cycle_task[cycle_task_type], "ui_iconsTotal_stalker10")
		
		news_text = text_color..game.translate_string(action_descr_by_type[type]).."\\n"..
		"%c[255,0,255,255]"..game.translate_string(task_title)..": %c[255,127,255,255]"..game.translate_string(task:get_objective(1):get_description())
	else
		--' Берем координаты единой текстуры
		task_texture, task_rect = get_texture_info("ui_iconsTotal_stalker10", "ui_iconsTotal_stalker10")
		
		news_text = text_color..game.translate_string(action_descr_by_type[type]).."\\n"..
		"%c[255,0,255,255]"..game.translate_string(task_title)
		
		if type ~= "complete" and type ~= "fail" then
			-- workaround for incomplete objective list
			if task:get_objectives_cnt() == objective_index then
				objective_index = objective_index - 1
			end
			
			if type == "new" then
				local obj_desc = task:get_objective(objective_index):get_description()
				if obj_desc ~= nil then
					news_text = news_text..": %c[255,127,255,255]"..game.translate_string(obj_desc)
				end
			elseif type == "update" then
				local obj_desc1 = task:get_objective(objective_index-1):get_description()
				local obj_desc2 = task:get_objective(objective_index):get_description()
				if obj_desc1 ~= nil then
					news_text = news_text.."\\n"..game.translate_string( "news_finished" )..game.translate_string(obj_desc1)
				end
				if obj_desc2 ~= nil and objective:get_idx() < objective_index then
					news_text = news_text.."\\n"..game.translate_string( "news_next" )..game.translate_string(obj_desc2)
				end
			end
		end
		
		-- считаем задания
		if type == "update" then
			xr_statistic.add_subtask()
		elseif type == "complete" then
			xr_statistic.add_subtask()
			xr_statistic.add_task()
		end
	end

	if db.actor:is_talking() then	
		db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	end	
	--выдаем в любом случае чтобы попало в дневник
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 5000)
	
	if type == "new" or
		type == "update"
	then
		--' Выдать новое подзадание
		if task:get_objectives_cnt() == objective_index then
			return
		end
		news_text = game.translate_string(task:get_objective(objective_index):get_description())
	else
		news_text = text_color..game.translate_string(action_descr_by_type[type])..
		"\\n".."%c[255,0,255,255]"..game.translate_string(task_title)
	end

	-- автосохранение только при получении и сдаче задания. циклические
	-- задания игнорируются.
	if not skip_autosave then
	  local news_text_save = game.translate_string( task_title )
	  if type == "complete" then
	    news_text_save = news_text_save..game.translate_string( "news_finished_small" )
	  end
	  -- удаляем предыдущий таймер на сохранение при сдаче/получении
	  -- нескольких квестов в одном диалоге 
	  -- сохраняем только самый последний автосейв по завершении диалога
	  if type == "new" or type == "complete" then
	    if autosave_t then autosave_t:stop() end
	    autosave_t = dsh.timeout( 3000, function()
	      autosave( news_text_save )
	    end )
	  end
	end

	local hud = get_hud()
	hud:AddCustomStatic("main_task", true)
	hud:GetCustomStatic("main_task"):wnd():SetTextST(news_text)
	hud:GetCustomStatic("main_task").m_endTime = time_global()/1000 + 7
end


function autosave( text )
  if u3_utils.can_save() then
    autosave_t = nil
    u3_utils.savegame( game.translate_string( "function_autosave_0" ) .. amk.game_days() .. ". " .. text )
  else
    autosave_t = dsh.timeout( 3000, function()
      autosave( text )
    end )
  end
end


function send_encyclopedy(type, title)
	if type == "Diary" then
		pda_news:play(db.actor, 0, sound_object.s2d)


		--' Берем координаты из текстуры таска
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_locations", "ui_iconsTotal_locations")
		local news_text = "%c[255,160,160,160]"..game.translate_string("st_found_new_pda").."\\n".."%c[default]"..game.translate_string(title)
		if db.actor:is_talking() then	
			db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 2000)
		end	
	end
end

function send_treasure(name)
	local 	level_name = {
		["esc"]  = game.translate_string( "ln_l01_escape_0" ),
		["gar"]  = game.translate_string( "ln_l02_garbage_0" ),
		["agr"]  = game.translate_string( "ln_l03_agroprom_0" ),
		["agr_u"] = game.translate_string( "ln_l03u_agr_underground_0" ),
		["val"]  = game.translate_string( "ln_l04_darkvalley_0" ),
		["mil"]  = game.translate_string( "ln_l07_military_0" ),
		["yan"]  = game.translate_string( "ln_l08_yantar_0" ),
		["x16"]  = game.translate_string( "ln_l08u_brainlab_0" ),
		["rad"]  = game.translate_string( "ln_l10_radar_0" ),
		["pri"]  = game.translate_string( "ln_l11_pripyat_0" ),
		["x18"]  = game.translate_string( "ln_l04u_labx18_0" ),
		["bar"]  = game.translate_string( "ln_l05_bar_0" ),
		["ros"]  = game.translate_string( "ln_l06_rostok_0" ),
		["pesh"]  = game.translate_string( "ln_peshera_0" ),
		["dead_city"]  = game.translate_string( "ln_dead_city_0" ),
		["generators_arhara"]  = game.translate_string( "ln_generators_0" ),
		["aver_arhara"]  = game.translate_string( "ln_aver_0" ),
		["warlab_arhara"]  = game.translate_string( "ln_warlab_0" ),
		["village"]  = game.translate_string( "ln_lost_village_0" ),
		["atp_arhara"]  = game.translate_string( "ln_atp_for_test22_0" ),
		["marsh"]  = game.translate_string( "ln_marsh_0" ),
		["limansk"]  = game.translate_string( "ln_limansk_0" ),
		["red_forest"]  = game.translate_string( "ln_red_forest_0" ),
		["hos"]  = game.translate_string( "ln_hospital_0" ),
		["jund"]  = game.translate_string( "ln_jupiter_underground_0" ),
		["labx8"]  = game.translate_string( "ln_labx8_0" ),
		["bum"]  = game.translate_string( "ln_l12u_control_monolith_0" ),
		["zl"]  = game.translate_string( "ln_puzir_0" ),
		["lab"]  = game.translate_string( "ln_av_peshera_0" ),
		["sar"]  = game.translate_string( "ln_l12u_sarcofag_0" ),
		["x10"]  = game.translate_string( "ln_l10u_bunker_0" ),
		["vp"]  = game.translate_string( "ln_pripyat_0" ),
		["zat"]  = game.translate_string( "ln_zaton_0" ),
		["jup"]  = game.translate_string( "ln_jupiter_0" )
	}
	pda_news:play(db.actor, 0, sound_object.s2d)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_abstract5")
	local level_key = string.sub( name, 1, string.find( name, "_s", 1, true ) - 1 )
	local tmp_str = ""
	if level_name[level_key] ~= nil then
		tmp_str = level_name[level_key]..": "
	end
	local news_text = "%c[255,160,160,160]"..game.translate_string("st_found_new_treasure").."\\n".."%c[120,255,120,160]"..tmp_str.."%c[170,200,200,200]"..game.translate_string(name)	
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 10000)
end


function get_inv_name( section )
  return get_string( section, "inv_name" )
end


function __relocate_item( actor, type, item, num )
  if db.actor == nil then return false end
  local item_name = game.translate_string( get_inv_name( item ) )
  if ( num or 1 ) > 1 then
    item_name = num .. "x " .. item_name
  end
  -- Играем дефолтный звук
  if type == "in" then
    local task_texture, task_rect = get_texture_info(
      "ui_iconsTotal_found_thing"
    )
    local news_text = "%c[255,105,239,146]"
      .. game.translate_string( "general_in_item" ) .. "\\n"
      .. "%c[default]" .. item_name
    if db.actor:is_talking() then
      db.actor:give_talk_message(
        news_text, task_texture, task_rect, "iconed_answer_item"
      )
    else
      db.actor:give_game_news( news_text, task_texture, task_rect, 0, 2000 )
    end		
  elseif type == "out" then
    local task_texture, task_rect = get_texture_info(
      "ui_iconsTotal_lost_thing"
    )
    local news_text = "%c[255,255,085,085]"
      .. game.translate_string( "general_out_item" ) .. "\\n"
      .. "%c[default]" .. item_name
    if db.actor:is_talking() then
      db.actor:give_talk_message(
        news_text, task_texture, task_rect, "iconed_answer_item"
      )
    else
      db.actor:give_game_news( news_text, task_texture, task_rect, 0, 2000 )
    end		
  end
end


function relocate_item( actor, type, item, num )
  --return __relocate_item( actor, type, item, num )
  return relocate_item_ex( type, item, num )
end


function get_talk_item_icon( sect )
  local icon = CIconParams( sect )
  local texture, rect
  if icon.icon_name then
    texture, rect = get_texture_info( icon.icon_name )
  else
    texture = dsh.get_ui_icon_equipment_name( sect )
    rect    = icon:original_rect()
    rect.x2 = rect.x2 - rect.x1
    rect.y2 = rect.y2 - rect.y1
  end
  return {
    texture, rect,
    ( "ico_item_" .. icon.grid_width .. "_" .. icon.grid_height )
  }
end


function relocate_item_ex( type, item, num, news_text )
  local item_name = game.translate_string( get_inv_name( item ) )
  if ( num or 1 ) > 1 then
    item_name = num .. "x " .. item_name
  end
  -- Играем дефолтный звук
  if type == "in" then
    if not news_text then
      news_text = "%c[255,105,239,146]"
        .. game.translate_string( "general_in_item" )
        .. "%c[default] " .. item_name
    end
    if db.actor:is_talking() then
      db.actor:give_talk_message(
        news_text, unpack( get_talk_item_icon( item ) )
      )
    else
      local task_texture, task_rect = get_texture_info(
        "ui_iconsTotal_found_thing"
      )
      db.actor:give_game_news( news_text, task_texture, task_rect, 0, 2000 )
    end		
  elseif type == "out" then
    if not news_text then
      news_text = "%c[255,255,085,085]"
        .. game.translate_string( "general_out_item" )
        .. "%c[default] " .. item_name
    end
    if db.actor:is_talking() then
      db.actor:give_talk_message(
        news_text, unpack( get_talk_item_icon( item ) )
      )
    else
      local task_texture, task_rect = get_texture_info(
        "ui_iconsTotal_lost_thing"
      )
      db.actor:give_game_news( news_text, task_texture, task_rect, 0, 2000 )
    end		
  end
end


function relocate_money(actor, type, amount)
	if db.actor == nil then return false end


	--' Играем дефолтный звук
	if type == "in" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_found_money")
		local news_text = "%c[255,105,239,146]"..game.translate_string("general_in_money").."\\n".."%c[default]"..game.translate_string(tostring(amount))
		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 2000)
		end		
	elseif type == "out" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
		local news_text = "%c[255,255,085,085]"..game.translate_string("general_out_money").."\\n".."%c[default]"..game.translate_string(tostring(amount))
		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 2000)
		end		
	end
end
